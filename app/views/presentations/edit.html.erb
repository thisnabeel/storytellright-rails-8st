


<style>
	.slide {
		display: inline-block;
	    width: 200px;
	    height: 100px;
	    margin: 0 10px;
	    border: 1px solid #ccc;
	    padding: 10px;
	    cursor: pointer;
	    position: relative;
	}

	.remove-slide {
		position: absolute;
    	top: -1px;
    	left: -6px;
    	z-index: 99999;
    	display: none;
	}

	.slide:hover .remove-slide {
		display: block;
	}

	.slides {
		margin: 20px 0;
		overflow: auto;
    	white-space: nowrap;
	}

	.slide-maker {
		width: 100%;
/*		height: 400px;*/
		border: 1px solid #ccc;
		margin-bottom: 20px;
		display: none;
	}

	/**/

	.slide.active-slide {
    	background: #e7ceff;
	}

	/**/

	.slide img {
		max-width: 100%;
    	max-height: 100%;
    	margin: 0 auto;
    	display: block;
	}

	.slide-maker [key] {
		margin: 10px 0;
	}

	.slide-maker {
		padding: 20px;
	}

	/**/
	.audio-box {
		display: inline;
    	padding: 10px;
    	top: 10px;
    	position: relative;
	}

	.what-media {
		position: absolute;
    	font-size: 5em;
	}

	.abstraction, .abstraction:focus {
		background-color: #FFD67F;
    	padding: 30px;
	}

	.sortable-placeholder {
		display: inline-block;
    	width: 200px;
    	height: 100px;
    	background: #FFD67F !important;
	}
	/*  */
	#speech {
		background: aliceblue;
    	padding: 30px;
	}

	.dark-mode #speech {
		background: #000000;
	}

	.form-control[key="data-body"]{
		background: rgb(0, 0, 0);
    	color: rgb(255, 242, 0);
	}
</style>

<b><%= @presentation.presentable.title %></b>
<h3>
	<div class="float-right btn btn-outline-primary view-presentation" data-id="<%= @presentation.id %>">Quick Preview</div>
</h3>

<h3 contentEditable key="title" url="/presentations/<%= @presentation.id %>"><%= @presentation.title %></h3>

<% if @presentation.presentable.present? && @presentation.presentable.try(:home).present? %>
	<a target="_blank" href="/<%= @presentation.presentable.home.class.name.downcase %>s/<%= @presentation.presentable.home.id %>">
		<h1><%= @presentation.presentable.home.title %></h1>
	</a>

	<textarea class="abstraction form-control"  data-id="<%= @presentation.presentable.id %>"><%= @presentation.presentable.body %></textarea>

	<br>
<% end %>

	<span class="btn add-slide btn-outline-primary btn-block">Add Slide <i class="fa fa-plus"></i></span>

	<ul class="slides clean-list">
		<% @presentation.body.try(:each) do |slide| %>
			<li class="slide"
				<% slide.try(:each) do |i| %>
					<%= "#{i[0]}=" %>"<%= i[1] %>" 
				<% end %>
			>
				<span class="fa fa-times remove-slide"></span>
			</li>
		<% end %>
	</ul>

	<div class="slide-maker">
		<div class="btn btn-outline-primary btn-block filer" key="data-file"><i class="fa fa-upload"></i> Add Media File</div>
		
		<input type="file" class="hidden" id="slideFile">

		<p style="padding: 0; margin: 0;">Or...</p>
		<input type="text" class="form-control" key="data-media" placeholder="Media Link...">
		<input type="text" class="form-control" key="data-caption" placeholder="Media Caption...">
		<input type="text" class="form-control" key="data-body" placeholder="Media Body...">

		<div class="row">
			<div class="col-lg-1">
				<div class="recorder-box">
					<div class="recorder"><img class="record" src="https://bassets.github.io/record.svg"><img class="arrow" src="https://bassets.github.io/arrow.svg"></div>
				</div>
			</div>
			<div class="col-lg-11">
				<div class="audio-box" key="data-demo">
				</div>	
			</div>
		</div>

		<hr>
		<label><u>Teleprompter</u></label>
		<%#  %>
		<div id="speech">
		 <textarea></textarea>
		</div>
		
	</div>


<script>
	// var editor = new FroalaEditor('textarea', {
	// 	imageUploadRemoteUrls: false
	// })
	$("body").on("click", ".add-slide", function(){
		
		$('.slides').append(
			`<li class="slide">
				<span class="fa fa-times remove-slide"></span>
			</li>`
		)
		$('.sortable').sortable('destroy');
		$('.slides').sortable().bind('sortupdate', function(e, ui) {
    		//ui.item contains the current dragged element.
    		//Triggered when the user stopped sorting and the DOM position has changed.
    		savePresentation()
		});

	})

	$("body").on("click", ".slide", function(){
		$(".active-slide").removeClass("active-slide")
		$(this).addClass("active-slide")

		populateSlideMaker()
		$(".slide-maker").show()
		
	})




	function savePresentation(){

		hash = {}
		hash["_method"] = 'post';

		$("[save-code]").each(function(){
			code = $(this).attr('save-code')
			val = $(this).val()
			hash[code] = val;
		})

		body = []
		$(".slide").each(function(){
			s = $(this)
    		list = {}
			$('.slide-maker [key]').each(function(){
    			key = $(this).attr("key")
    			list[key] = s.attr(key)
			})
			
			list["data-speech"] = s.attr("data-speech")

    		console.log("list", list)
    		body.push(list)
		})
		

		hash["body"] = body;

		$.ajax({
		    type: "PUT",
		    dataType: "json",
			url: '/presentations/<%= @presentation.id %>',
		    contentType: 'application/json',
		    data: JSON.stringify(hash),
		    success: function(res){
		      console.log(res)
		    }
		})
	}

	var saveCodeTypeWatchOptions = {
	    callback: function (value) { 
	    	savePresentation()
	    },
	    wait: 100,
	    highlight: true,
	    allowSubmit: false,
	    captureLength: 2
	}

	$("[save-code]").typeWatch( saveCodeTypeWatchOptions );

	$(".slide-maker input").typeWatch( {
	    callback: function (value) { 
	    	saveMaker()
	    },
	    wait: 100,
	    highlight: true,
	    allowSubmit: false,
	    captureLength: 2
	} );

	function saveMaker(){
		$('.slide-maker [key]').each(function(){
	    		key = $(this).attr("key")
	    		if ((key == "data-demo") || (key == "data-file")) {
	    			$('.active-slide').attr(key, $(this).attr("value"))
	    		} else {
	    			$('.active-slide').attr(key, $(this).val())
	    		}
	    	})
	    	makeSlides()
	    	savePresentation()
	}

	function populateSlideMaker(){
		$('.slide-maker [key]').each(function(){
    		key = $(this).attr("key")
    		$(this).val($('.active-slide').attr(key))
		})
		
		
		$("#speech .fr-view").html(decodeURIComponent($('.active-slide').attr("data-speech") || ""))

    	$(".slide-maker").find(".audio-box").empty()

    	$(".slide-maker").find(".filer").attr("value", $(".active-slide").attr("data-file"))

    	demo = $('.active-slide').attr("data-demo")
    	console.log("demo", demo)
    	if (demo && demo.length > 1) {
    		$(".slide-maker").find(".audio-box").attr("value", demo)
			$(".slide-maker").find(".audio-box").append(`<audio id="" src="` + demo + `?noCache=` + Math.floor(Math.random() * 1000000) + `" type="audio/mpeg" controls></audio>
				<i class="btn btn-outline-danger fa fa-times delete-demo"></i>`)
		} else {
			$(".slide-maker").find(".audio-box").empty()
			$(".slide-maker").find(".audio-box").removeAttr("value")
		}

	}
	
	makeSlides()

	function makeSlides(){
		$(".slide").each(function(){
			$(this).empty()
			$(this).append(`<span class="fa fa-times remove-slide"></span>`)
			media = $(this).attr("data-media")
			file = $(this).attr("data-file")

			if (media && media.length > 1) {
				$(this).append(`<img src="`+media+`" />`)
			}

			if (file && file.length > 1) {
				if (whatMedia(file) == "audio") {
					$(this).append(`<i class="fa fa-volume-up what-media"></i>`)
				}
			}


		})
	}

	$("body").on("click", ".remove-slide", function(){
		li = $(this).closest("li")
		li.remove()
		$(".slide-maker").hide()

		deleteS3File(li.attr("data-file"), function(){

			deleteS3Demo(li.attr("data-demo"), function(){

				savePresentation()			

			})

		})

	})

	// 
	$('.slides').sortable().bind('sortupdate', function(e, ui) {
    	//ui.item contains the current dragged element.
    	//Triggered when the user stopped sorting and the DOM position has changed.
    	savePresentation()
	});

	// /////////////////
	
	var abstractionTypeWatchOptions = {
    	callback: function (value) { 
    		$.ajax({
			    type: "PUT",
			    dataType: "json",
			    url: '/abstractions/'+$(this).attr("data-id"),
			    contentType: 'application/json',
			    data: JSON.stringify({ 
			       body: value,
			       _method:'post' 
			    }),
			    success: function(res){
			      console.log(res)
			    }
			})
	    },
	    wait: 750,
	    highlight: true,
	    allowSubmit: false,
	    captureLength: 2
	}

	$(".abstraction").typeWatch( abstractionTypeWatchOptions );

    //   new FroalaEditor('#speech textarea', {
    //     key: froalaKey,
    //     toolbarInline: true,
    //     charCounterCount: false,
    //     tabSpaces: 4,
	// 	saveInterval: 750,
	// 	events: {
    //       'save.before': function () {
    //         // Before save request is made.
    //         // console.log(this);
	// 		speech = $("#speech .fr-view").html()

	// 		console.log(speech)

	// 		speech = encodeURIComponent(speech)
			
	// 		console.log(speech)

	// 		$(".active-slide").attr("data-speech", speech)

	// 		savePresentation()

	// 	  },
	// 	}
    //   })
    
	 $("#speech textarea").froalaEditor({
	 	key: froalaKey,
		toolbarInline: true,
		charCounterCount: false,
		toolbarButtons: ['bold', 'italic', 'underline', 'strikeThrough', 'color', 'emoticons', '-', 'paragraphFormat', 'align', 'formatOL', 'formatUL', 'indent', 'outdent', '-', 'insertImage', 'insertLink', 'insertFile', 'insertVideo', 'undo', 'redo'],
	   saveInterval: 500
	  })
	  .on('froalaEditor.save.before', function (e, editor) {
	    // Before save request is made.
	    
			speech = $("#speech .fr-view").html()

			console.log(speech)

			speech = encodeURIComponent(speech)
			
			console.log(speech)

			$(".active-slide").attr("data-speech", speech)

			savePresentation()

	  })
	  .on('froalaEditor.save.after', function (e, editor, response) {
	    // After successfully save request.
	  })
	  .on('froalaEditor.save.error', function (e, editor, error) {
	    // Do something here.
	  });

	// $('#speech textarea', {
    //     key: froalaKey,
    //     toolbarInline: true,
    //     charCounterCount: false,
    //     tabSpaces: 4,
	// 	saveInterval: 750,
	// 	events: {
    //       'save.before': function () {
    //         // Before save request is made.
    //         // console.log(this);
	// 		speech = $("#speech .fr-view").html()

	// 		console.log(speech)

	// 		speech = encodeURIComponent(speech)
			
	// 		console.log(speech)

	// 		$(".active-slide").attr("data-speech", speech)

	// 		savePresentation()

	// 	  },
	// 	}
    //   })

// 
  makeCE()

  // 
  function makeCE(){
    $('[contentEditable]').contentEdit(function(val, el){
      console.log(val)
      $.notify("Saved!", "success");
    });

  }

</script>

<%= render "presentations/recorder" %>
<%= render "presentations/filer" %>
